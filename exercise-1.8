#|
Exercise 1.8
Newton’s method for cube roots is based on the fact that if y is an approximation to the cube root of x,
then a beer approximation is given by the value

((x/(y^2)) + 2y) / 3

Use this formula to implement a cube-root procedure analogous to the square-root procedure.
(In Section 1.3.4 we will see how to implement Newton’s method in general as an abstraction of
these square-root and cube-root procedures.)
|#

(define (cbrt-iter guess x)
  (if (good-enough? guess x)
    guess
    (cbrt-iter (better-guess guess x) x))
)

(define (better-guess guess x)
  (/ (+ (/ x (expt guess 2)) (* 2 guess)) 3)
)

(define (good-enough? guess x)
  (< (abs-diff (expt guess 3) x) 0.001)
)

(define (abs-diff num1 num2)
  (abs (- num1 num2))
)

(define (cbrt x)
  (cbrt-iter 1.0 x)
)

;;; Alias

(define (run-iter guess x)
  (cbrt-iter guess x)
)

(define (run x)
  (cbrt x)
)
