#|
Exercise 1.9: Each of the following two procedures defines a method for adding two positive integers
in terms of the procedures inc, which increments its argument by 1, and dec, which decrements its argument by 1.

(define (+ a b)
  (if (= a 0) b (inc (+ (dec a) b))))

(define (+ a b)
  (if (= a 0) b (+ (dec a) (inc b))))
Using the substitution model, illustrate the process generated by each procedure in evaluating (+ 4 5).
Are these processes iterative or recursive?
|#

(define (run-iter a b)
  (cond
    ((= a 0) b)
    (else (se "(inc" (run-iter (- a 1) b) ")") )
  )
)

(define run (run-iter 4 5))

#|
This was just a fun way to print the substitution model of the recursive process call, using a recursive process.
See what I did there? The final output though prints only the final value of the expansion process.

The answer to the question is more properly represented on paper by applying the substitution model

The verdict is this;
1. the first procedure generates a recursive process
2. the second procedure generates an iterative process
|#